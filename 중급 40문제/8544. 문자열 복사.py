'''
문자열 복사 사태가 벌어졌습니다.
따라서 현재 모든 사람들이 "문자열 복사"를 할 수 있게 되었습니다.

문자열 복사의 과정은 다음과 같습니다. 
먼저, 길이가 N인 원본 문자열에 대해, 1 ≤ k ≤ N인 정수 k를 고릅니다. 
그 뒤, 해당 문자열에서 k개의 연속되는 문자들을 골라 복사하여 각 문자 위치 바로 뒤에 붙여넣습니다. 
예를 들어, 원본 문자열이 "string" 일 때 3개의 연속되는 문자 "tri" 를 골라 복사하면 "sttrriing"이 됩니다.

민겸은 문자열 복사를 이용하여 특정한 문자열을 만들려고 합니다. 
민겸은 현재 세 글자의 문자열을 가지고 있습니다. 
민겸이 문자열 복사를 최소 몇 번 해야 목표 문자열을 만들 수 있을지 알려주는 프로그램을 작성하세요.
-------------------------------------------
[입력값 설명]
입력은 두 줄로 주어집니다. 첫 번째 줄에 민겸이 원래 가지고 있는 문자열 S1이 주어집니다.
두 번째 줄에 민겸이 만들려고 하는 문자열 S2가 주어집니다.
S1의 길이는 3이며, S2의 길이는 100 이하입니다.
두 문자열은 모두 영어 대문자로만 되어 있습니다.

[출력값 설명]
민겸이 문자열 복사를 최소 몇 번 해야 목표 문자열을 만들 수 있는지 출력합니다.
만드는 게 가능한 입력만 주어집니다.
--------------------------------------------------

예제 입력1
NOS
NNOOOSS

예제 출력1
2

예제 입력2
PPS
PPPPPSSSSS

예제 출력2
3

'''

# 8544. 문자열 복사
import sys 
sys.stdin=open('input.txt', 'r')


def min_copies(S1, S2):
    # S1의 각 문자에 대해 필요한 최소 복사 횟수를 계산
    max_copies = 0
    for char in set(S1):
        # S2에서 char의 최대 연속 길이를 찾는다
        max_len = 0
        current_len = 0
        for s in S2:
            if s == char:
                current_len += 1
                max_len = max(max_len, current_len)
            else:
                current_len = 0
        
        # 이 최대 연속 길이를 만들기 위한 복사 횟수를 계산한다
        # 예: 연속 길이가 5이고 S1에 해당 문자가 1개 있으면, 필요한 복사 횟수는 2 (2^2 = 4 < 5 <= 2^3 = 8)
        copies = 0
        while (2 ** copies) * S1.count(char) < max_len:
            copies += 1
        max_copies = max(max_copies, copies)
    
    return max_copies
            
if __name__ == "__main__":
    S1 = input().strip()
    S2 = input().strip()

    print(min_copies(S1, S2))

    